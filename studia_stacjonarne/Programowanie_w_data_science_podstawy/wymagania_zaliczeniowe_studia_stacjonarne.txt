Termin oddania papierowej wersji rozwiazan oraz linku do repozytorium w serwisie GitHub: 29.01.2020
Do rozwiazania: wylosowane 12 zadan + 3 projekty

ZADANIA:
1. Napisz skrypt, który bedzie wyswietlac wszystkie kolejne dzielniki wprowadzonej liczby

2. Korzystajac z pojecia funkcji utwórz skrypt, który bedzie mial możliwosc zamiany temperatury pomiedzy skalami Celsjusza i Fahrenheita (w obie strony). C = (F-32)x(5/9), F = (C*9/5)+32

3. Utwórz skrypt do zamiany kilometrów na mile i na odwrót

4. Utwórz skrypt do znajdowania miejsc zerowych trójmianu kwadratowego x1 = (-b+sqrt(b*b-4*a*c))/(2*a)
x2 = (-b-sqrt(b*b-4*a*c))/(2*a)

5. Utwórz skrypt, który bedzie komunikowac, czy wprowadzona liczba jest dodatnia czy nie

6. Utwórz skrypt dodajacy ulamki zwykle

7. Utwórz skrypt z interfejsem tekstowym, który pobierze od użytkownika zdanie i wyswietli w kolejnych wierszach litery tego zdania w odwróconej kolejnosci
 
8. W klasie przeprowadzono sprawdzian, za który uczniowie mogli otrzymac maksymalnie 40 punktów. Skala ocen w szkole jest nastepujaca: 0-39% - ndst, 40-49% - dop, 50-69% - dst, 70-84% - db, 85-99% - bdb, 100% - cel. Utwórz skrypt z interfejsem tekstowym, który na podstawie podanej liczby punktów ze sprawdzianu wyswietli ocene jaka sie należy (skorzystaj z konstrukcji if, elif, else)

9. Utwórz skrypt z interfejsem tekstowym, który wyliczy sume n kolejnych liczb (użytkownik podaje pierwsza i ostatnia liczbe sumy). Uwaga - w zadaniu należy zbudowac funkcje wlasna realizujaca dane zadanie

10. Utwórz skrypt z interfejsem tekstowym, który przyjmie od użytkownika ile elementów chce on wprowadzic do listy, przyjmie te elementy, a nastepnie wyliczy: srednia i odchylenie standardowe sredniej. Wykonac zadanie na dwa sposoby: poprzez utworzenie funkcji wlasnych obliczajacych srednia i odchylenie standardowe oraz korzystajac z gotowych funkcji np. z pakietu numpy

11. Utwórz skrypt z interfejsem tekstowym który obliczy silnie od danego argumentu. Wykonac zadanie na dwa sposoby - iteracyjnie i rekurencyjnie

12. Utworzyc skrypt z interfejsem tekstowym obliczajacy n-ty element ciagu Fibonacciego - wykonac zadanie iteracyjnie i rekurencyjnie
 
13. Utworzyc skrypt z interfejsem tekstowym obliczajacy symbol Newtona n po k. Utworzyc funkcje, która bedzie wywolywac inna funkcje

14. Utworzyc skrypt z interfejsem tekstowym, który bedzie zwracac wiersz n-tego rzedu z trójkata Pascala (użytkownik podaje n, program zwraca odpowiadajacy wiersz trójkata)

15. Utwórz skrypt, w którym zamiescisz 3 listy danych, zawierajace po 14 temperatur dla 3 wybranych miast na kolejne 14 dni oraz utwórz wykres z tych danych. Twój wykres powinien miec 3 linie z zaznaczonymi punktami danych za pomoca różnych znaczników, tytul, opisane osie oraz legende

16. Utwórz funkcje wlasna, która jako argument przyjmowac bedzie liste argumentów i wartosci, a jako wynik bedzie wyswietlac sformatowany wykres (stosowny zakres, opis, kolory, legenda)

17. Utwórz funkcje, która bedzie generowac listy danych do wykreslenia w oparciu o:
a) fukcje liniowa ax+b
b) funkcje kwadratowa ax^2+bx+c
c) funkcje odwrotnie-potegowa a/x^n
Każda z fukcji powinna przyjmowac parametry równania, natomiast zwracac powinna dwie listy - x i y, które nastepnie bedzie można wykreslic na wykresie

18. Utwórz petle, która w zależnosci od wartosci licznika - (i na podstawie rozwiazania zadania 17. Licznik petli ma byc argumentem funkcji z zadania 17) bedzie generowac zestawy danych oraz zapisywac je w katalogu na dysku komputera w formie pliku tekstowego
  
19. Korzystajac ze slownika, utwórz funkcje, która bedzie zwracac liczbe dni danego miesiaca w roku

20. Korzystajac ze slownika, utwórz funkcje, która bedzie zwracac tlumaczenia nazw miesiecy z jezyka polskiego na angielski

21. Utwórz fukcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie srednia arytmetyczna. Porównaj jej wynik z wynikiem fukcji mean z pakietu numpy

22. Utwórz fukcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie mediana (skorzystaj z metody sort dzialajacej na standardowych listach)

23. Utwórz funkcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie dominanta (moda). Skorzystaj z obiektu Counter i jego metody most_common z pakietu collections

24. Utwórz fukcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie odchylenie standardowe sredniej

25. Utwórz fukcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie drugi moment centralny (wariancja)

26. Utwórz funkcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie trzeci moment centralny (skosnosc)

27. Utwórz funkcje, która jako argument bedzie przyjmowac liste liczb zmiennoprzecinkowych, a jej wynikiem bedzie czwarty moment centralny (kurtoza)

28. Utwórz funkcje, która jako argument bedzie przyjmowac dwie listy o równej liczbie elementów, a jej wynikiem bedzie wspólczynnik korelacji

29. Utwórz funkcje, która jako argument bedzie przyjmowac dwie listy o równej liczbie elementów, a jej wynikiem beda wspólczynniki regresji liniowej

30. Wynegeruj liste 1000 liczb losowych o rozkladzie normalnym. Wykresl histogram oraz srednia, mediane, dominante, odchylenie standardowe, wariancje, skosnosc i kurtoze

31. Korzystajac z instrukcji np.random.choice oraz reshape z pakietu numpy stworzyc funkcje generuja macierz kwadratowa stopnia N wypelniona wartosciami 0 i 255 w losowy sposób

32. Utwórz funckje, która na zadanej macierzy zapisze wzór ustalonych struktur (blok, ul, bochenek, lódka, swiatla uliczne, żaba, latarnia)

33. Korzystajac z zadania 32, utwórz pusta macierz wymiaru 6x6, a nastepnie zapisz nia niej strukture bochenka. Utwórz funkcje zależna od numeru wiersza i kolumny macierzy (i, j), która bedzie obliczac liczbe "żywych" komórek sasiadujacych wzgledem komórki (i, j)
 
34. Utwórz pusta klase Figura, a nastepnie utwórz dwie instancje tej klasy. Sprawdz czy sa sobie równe

35. Utwórz klase Kwadrat z konstruktorem ustalajacym jego bok oraz metodami: wyswietlajacymi wartosc tego boku, obliczajacymi pole i obwód figury

36. Utwórz klase Prostokat, a nastepnie na jej podstawie (korzystajac z mechanizmu dziedziczenia) utwórz klase Kwadrat

PROJEKTY:
1. Utwórz program do nauki obcych slówek. Program powinien posiadac interfejs tektowy, w którym użytkownik wskazuje plik ze slówkami do nauki. Nastepnie program importuje dane i wprowadza je do slownika. W kolejnym etapie program przepytuje uzytkownika z wiedzy zawartej w pliku ze slówkami. Program powinien wyliczac za ile dni użytkownik powinien powtórzyc nauke - jesli odpowiedzial dobrze - za 7 dni, jesli zle - za 0 dni. Program tworzy nowy plik, który bedzie zawierac informacje na temat daty ostatniej sesji nauki, id przerobionych slówek oraz za ile dni należy odbyc powtórke.
Program dodatkowo ma importowac log z poprzedniej sesji aby odpytywac użytkownika z zaplanowanej powtórki.

2. Wykorzystujac rozwiazania powyższych zadan utwórz symulacje automatu komórkowego - gry w życie (game of life). Gra w życie stanowi ciekawy problem sieci komórek, który można opisac za pomoca macierzy. Scena symulacji sklada sie z NxN pól, które moga przyjmowac jeden z dwóch stanów - żywy lub martwy. Symulacja sklada sie z nastepujacych po sobie kroków, aktualizujacych stany komórek sceny. W każdym kroku sprawdzany jest stan danej komórki oraz jej sasiadów. W nowym kroku komórka może stac sie żywa lub martwa w zależnosci przyjetych regul. W projekcie korzystamy z regul Conwaya:
- komórka umiera: jesli komórka jest żywa to umrze jesli jest w "przeludnionym" otoczeniu, tzn. posiada 4 lub wiecej żywych sasiadów lub jesli jest w opustoszalym otoczeniu - jesli komórka ma mniej niż 1 żywego sasiada to również umiera.
- komórka rodzi sie: jesli komórka jest martwa, stanie sie żywa jesli ma dokladnie 3 żywych sasiadów
- komórka nie zmienia stanu: pozostale przypadk, czyli komórka pozostaje żywa jeżeli ma dokladnie dwóch lub trzech żywych sasiadów, komórka pozostaje martwa jeżeli wokól niej jest dowolna sytuacja poza trzema żywymi sasiadami.
Utworzony program powinien posiadac:
- Możliwosc generowania poczatkowej sceny
- Możliwosc ustawiania na scenie pewnych szczególnych struktur (szybowiec, cegla, bochenek)
- Funkcje obliczajaca liczbe żywych sasiadów dla danej komórki
- Funckje obliczajaca nowy stan sceny
- Funckje generujaca animacje wyników symulacji.

3. Utwórz klase Vector2D. Wykorzystaj cala wiedze jaka posiadasz na temat wektorów na plaszczyznie. Zdefiniuj wszystkie znane Ci operacje.

4. Utwórz klase Vector3D. Wykorzystaj cala wiedze jaka posiadasz na temat wektorów w przestrzeni. Zdefiniuj wszystkie znane Ci operacje.

5. Utwórz klase Martix. Wykorzystaj cala wiedze jaka posiadasz na temat macierzy. Zdefiniuj wszystkie znane Ci operacje.

6. Utwórz klase Perceptron zgodnie z modelem McCullocha-Pittsa. Przeprowadz eksperyment uczenia neuronu - niech rozpoznaje czy wybrany punkt o wspólrzednych x, y znajduje sie powyżej lub poniżej zadanej prostej.

7. Zapoznaj sie z danymi dotyczacymi ofiar katastrofy Titanica. W oparciu o artykul zawarty na stronie: https://stackabuse.com/pandas-library-for-data-visualization-in-python/ wykonaj analize pliku z danymi. Przedstaw dane w postaci tabeli, sporzadz histogram wieku ofiar, odpowiedz na pytanie - co moglo miec wplyw na przeżycie pasażerów (plec, wiek, status posleczny na podstawie klasy biletu).

Pomocne materialy:
Daniel Shiffman - "The nature of code" https://natureofcode.com/
Amit Saha - "Doing math with python" https://nostarch.com/doingmathwithpython
Mahesh Venkitachalam - "Python. 14 twórczych projektów dla dociekliwych programistów" https://helion.pl/ksiazki/python-14-tworczych-projektow-dla-dociekliwych-programistow-mahesh-venkitachalam,pythtp.htm#format/e
