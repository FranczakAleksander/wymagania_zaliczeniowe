Tutaj znajdują się wymagania zaliczeniowe
Termin oddania papierowej wersji rozwiązań oraz linku do repozytorium w serwisie GitHub: 02.02.2020
Do rozwiązania: wylosowane 13 zadań + 2 projekty

ZADANIA:
1. Napisz skrypt, który będzie wyświetlać wszystkie kolejne dzielniki wprowadzonej liczby

2. Korzystając z pojęcia funkcji utwórz skrypt, który będzie miał możliwość zamiany temperatury pomiędzy skalami Celsjusza i Fahrenheita (w obie strony). C = (F-32)x(5/9), F = (C*9/5)+32

3. Utwórz skrypt do zamiany kilometrów na mile i na odwrót

4. Utwórz skrypt do znajdowania miejsc zerowych trójmianu kwadratowego x1 = (-b+sqrt(b*b-4*a*c))/(2*a)
x2 = (-b-sqrt(b*b-4*a*c))/(2*a)

5. Utwórz skrypt, który będzie komunikować, czy wprowadzona liczba jest dodatnia czy nie

6. Utwórz skrypt dodający ułamki zwykłe

7. Utwórz skrypt z interfejsem tekstowym, który pobierze od użytkownika zdanie i wyświetli w kolejnych wierszach litery tego zdania w odwróconej kolejności
 
8. W klasie przeprowadzono sprawdzian, za który uczniowie mogli otrzymać maksymalnie 40 punktów. Skala ocen w szkole jest następująca: 0-39% - ndst, 40-49% - dop, 50-69% - dst, 70-84% - db, 85-99% - bdb, 100% - cel. Utwórz skrypt z interfejsem tekstowym, który na podstawie podanej liczby punktów ze sprawdzianu wyświetli ocenę jaka się należy (skorzystaj z konstrukcji if, elif, else)

9. Utwórz skrypt z interfejsem tekstowym, który wyliczy sumę n kolejnych liczb (użytkownik podaje pierwszą i ostatnią liczbę sumy). Uwaga - w zadaniu należy zbudować funkcję własną realizującą dane zadanie

10. Utwórz skrypt z interfejsem tekstowym, który przyjmie od użytkownika ile elementów chce on wprowadzić do listy, przyjmie te elementy, a następnie wyliczy: średnią i odchylenie standardowe średniej. Wykonać zadanie na dwa sposoby: poprzez utworzenie funkcji własnych obliczających średnią i odchylenie standardowe oraz korzystając z gotowych funkcji np. z pakietu numpy

11. Utwórz skrypt z interfejsem tekstowym który obliczy silnię od danego argumentu. Wykonać zadanie na dwa sposoby - iteracyjnie i rekurencyjnie

12. Utworzyć skrypt z interfejsem tekstowym obliczający n-ty element ciągu Fibonacciego - wykonać zadanie iteracyjnie i rekurencyjnie
 
13. Utworzyć skrypt z interfejsem tekstowym obliczający symbol Newtona n po k. Utworzyć funkcję, która będzie wywoływać inną funkcję

14. Utworzyć skrypt z interfejsem tekstowym, który będzie zwracać wiersz n-tego rzędu z trójkąta Pascala (użytkownik podaje n, program zwraca odpowiadający wiersz trójkąta)

15. Utwórz skrypt, w którym zamieścisz 3 listy danych, zawierające po 14 temperatur dla 3 wybranych miast na kolejne 14 dni oraz utwórz wykres z tych danych. Twój wykres powinien mieć 3 linie z zaznaczonymi punktami danych za pomocą różnych znaczników, tytuł, opisane osie oraz legendę

16. Utwórz funkcję własną, która jako argument przyjmować będzie listę argumentów i wartości, a jako wynik będzie wyświetlać sformatowany wykres (stosowny zakres, opis, kolory, legenda)

17. Utwórz funkcję, która będzie generować listy danych do wykreślenia w oparciu o:
a) fukcję liniową ax+b
b) funkcję kwadratową ax^2+bx+c
c) funkcję odwrotnie-potęgową a/x^n
Każda z fukcji powinna przyjmować parametry równania, natomiast zwracać powinna dwie listy - x i y, które następnie będzie można wykreślić na wykresie

18. Utwórz pętlę, która w zależności od wartości licznika - (i na podstawie rozwiązania zadania 17. Licznik pętli ma być argumentem funkcji z zadania 17) będzie generować zestawy danych oraz zapisywać je w katalogu na dysku komputera w formie pliku tekstowego.
  
19. Korzystając ze słownika, utwórz funkcję, która będzie zwracać liczbę dni danego miesiąca w roku

20. Korzystając ze słownika, utwórz funkcję, która będzie zwracać tłumaczenia nazw miesięcy z języka polskiego na angielski

21. Utwórz fukcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie średnia arytmetyczna. Porównaj jej wynik z wynikiem fukcji mean z pakietu numpy

22. Utwórz fukcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie mediana (skorzystaj z metody sort działającej na standardowych listach)

23. Utwórz funkcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie dominanta (moda). Skorzystaj z obiektu Counter i jego metody most_common z pakietu collections

24. Utwórz fukcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie odchylenie standardowe średniej

25. Utwórz fukcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie drugi moment centralny (wariancja)

26. Utwórz funkcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie trzeci moment centralny (skośność)

27. Utwórz funkcję, która jako argument będzie przyjmować listę liczb zmiennoprzecinkowych, a jej wynikiem będzie czwarty moment centralny (kurtoza)

28. Utwórz funkcję, która jako argument będzie przyjmować dwie listy o równej liczbie elementów, a jej wynikiem będzie współczynnik korelacji

29. Utwórz funkcję, która jako argument będzie przyjmować dwie listy o równej liczbie elementów, a jej wynikiem będą współczynniki regresji liniowej

30. Wynegeruj listę 1000 liczb losowych o rozkładzie normalnym. Wykreśl histogram oraz średnią, medianę, dominantę, odchylenie standardowe, wariancję, skośność i kurtozę

31. Korzystając z instrukcji np.random.choice oraz reshape z pakietu numpy stworzyć funkcję generują macierz kwadratową stopnia N wypełnioną wartościami 0 i 255 w losowy sposób

32. Utwórz funckję, która na zadanej macierzy zapisze wzór ustalonych struktur (blok, ul, bochenek, łódka, światła uliczne, żaba, latarnia)

33. Korzystając z zadania 32, utwórz pustą macierz wymiaru 6x6, a następnie zapisz nia niej strukturę bochenka. Utwórz funkcję zależną od numeru wiersza i kolumny macierzy (i, j), która będzie obliczać liczbę "żywych" komórek sąsiadujących względem komórki (i, j)
 
34. Utwórz klasę Kwadrat z konstruktorem ustalającym jego bok oraz metodami: wyświetlającymi wartość tego boku, obliczającymi pole i obwód figury

35. Utwórz klasę Prostokąt, a następnie na jej podstawie (korzystając z mechanizmu dziedziczenia) utwórz klasę Kwadrat

PROJEKTY:
1. Utwórz program do nauki obcych słówek. Program powinien posiadać interfejs tektowy, w którym użytkownik wskazuje plik ze słówkami do nauki. Następnie program importuje dane i wprowadza je do słownika. W kolejnym etapie program przepytuje uzytkownika z wiedzy zawartej w pliku ze słówkami. Program powinien wyliczać za ile dni użytkownik powinien powtórzyć naukę - jeśli odpowiedział dobrze - za 7 dni, jeśli źle - za 0 dni. Program tworzy nowy plik, który będzie zawierać informacje na temat daty ostatniej sesji nauki, id przerobionych słówek oraz za ile dni należy odbyć powtórkę.
Program dodatkowo ma importować log z poprzedniej sesji aby odpytywać użytkownika z zaplanowanej powtórki.

2. Utwórz klasę Vector2D. Wykorzystaj całą wiedzę jaką posiadasz na temat wektorów na płaszczyźnie. Zdefiniuj wszystkie znane Ci operacje.

3. Utwórz klasę Vector3D. Wykorzystaj całą wiedzę jaką posiadasz na temat wektorów w przestrzeni. Zdefiniuj wszystkie znane Ci operacje.

4. Utwórz klasę Martix. Wykorzystaj całą wiedzę jaką posiadasz na temat macierzy. Zdefiniuj wszystkie znane Ci operacje.

5. Zapoznaj się z danymi dotyczącymi ofiar katastrofy Titanica. W oparciu o artykuł zawarty na stronie: https://stackabuse.com/pandas-library-for-data-visualization-in-python/ wykonaj analizę pliku z danymi. Przedstaw dane w postaci tabeli, sporządź histogram wieku ofiar, odpowiedz na pytanie - co mogło mieć wpływ na przeżycie pasażerów (płeć, wiek, status posłeczny na podstawie klasy biletu).

Pomocne materiały:
Daniel Shiffman - "The nature of code" https://natureofcode.com/
Amit Saha - "Doing math with python" https://nostarch.com/doingmathwithpython
Mahesh Venkitachalam - "Python. 14 twórczych projektów dla dociekliwych programistów" https://helion.pl/ksiazki/python-14-tworczych-projektow-dla-dociekliwych-programistow-mahesh-venkitachalam,pythtp.htm#format/e
